<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.communify.domain.hotpost.dao.HotPostRepository">
    <resultMap id="postOutlineResultMap" type="PostOutline">
        <result property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="memberId" column="member_id"/>
        <result property="memberName" column="name"/>
        <result property="categoryId" column="category_id"/>
        <result property="viewCount" column="view_count"/>
        <result property="likeCount" column="like_count"/>
        <result property="commentCount" column="comment_count"/>
        <result property="createdDateTime" column="created_timestamp"/>
        <result property="isHot" column="is_hot"/>
    </resultMap>

    <select id="findHotPostOutlinesByCategory" resultMap="postOutlineResultMap">
        SELECT p.id,
               p.title,
               p.member_id,
               m.name,
               p.category_id,
               p.view_count,
               p.like_count,
               COUNT(c.id)      AS comment_count,
               p.created_timestamp,
               true             as is_hot
        FROM hot_post h
                 INNER JOIN post p ON h.post_id = p.id
                 LEFT OUTER JOIN member m on p.member_id = m.id
                 LEFT OUTER JOIN comment c ON p.id = c.post_id
        WHERE p.category_id = #{categoryId}
        GROUP BY p.id
        LIMIT #{limit};
    </select>

    <select id="findMostViewedPostIdFrom">
        SELECT id
        FROM post
        WHERE category_id = #{categoryId}
          AND created_timestamp >= NOW() - INTERVAL #{hour} DAY
        GROUP BY id
        ORDER BY view_count DESC, created_timestamp DESC
        LIMIT #{limit}
    </select>

    <delete id="deleteAllFromHotPost">
        DELETE
        FROM hot_post
    </delete>

    <insert id="insertAllHotPosts">
        INSERT INTO hot_post
        VALUES
        <foreach collection="list" item="id" separator=",">
            (#{id})
        </foreach>
    </insert>

    <select id="isHot">
        SELECT EXISTS(SELECT *
                      FROM hot_post
                      WHERE post_id = #{postId})
    </select>
</mapper>
