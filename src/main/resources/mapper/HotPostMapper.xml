<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.communify.domain.hotpost.dao.HotPostRepository">
    <resultMap id="postOutlineResultMap" type="PostOutline">
        <result property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="writerId" column="writer_id"/>
        <result property="writerName" column="name"/>
        <result property="categoryId" column="category_id"/>
        <result property="viewCount" column="view_count"/>
        <result property="likeCount" column="like_count"/>
        <result property="commentCount" column="comment_count"/>
        <result property="createdDateTime" column="created_timestamp"/>
        <result property="isHot" column="is_hot"/>
    </resultMap>

    <select id="findAllHotPostOutlineList" resultMap="postOutlineResultMap">
        SELECT p.id,
               p.title,
               p.writer_id,
               m.name,
               p.category_id,
               p.view_count,
               p.like_count,
               p.comment_count,
               p.created_timestamp,
               TRUE AS is_hot
        FROM hot_post h
                 INNER JOIN post p ON h.post_id = p.id
                 LEFT OUTER JOIN member m on p.writer_id = m.id
        <if test="cond.lastPostId != null">
        WHERE p.id &lt; #{cond.lastPostId}
        </if>
        ORDER BY p.id DESC
        LIMIT #{cond.searchSize}
    </select>

    <select id="findHotPostOutlineByCategoryList" resultMap="postOutlineResultMap">
        SELECT p.id,
               p.title,
               p.writer_id,
               m.name,
               p.category_id,
               p.view_count,
               p.like_count,
               p.comment_count,
               p.created_timestamp,
               TRUE AS is_hot
        FROM hot_post h
                 INNER JOIN post p ON h.post_id = p.id
                 LEFT OUTER JOIN member m on p.writer_id = m.id
        WHERE p.category_id = #{cond.categoryId}
        ORDER BY p.id DESC
        LIMIT #{cond.searchSize};
    </select>
</mapper>
