<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.communify.domain.member.dao.MemberRepository">
    <resultMap id="memberInfoResultMap" type="MemberInfo">
        <result property="id" column="id"/>
        <result property="email" column="email"/>
        <result property="hashed" column="hashed"/>
        <result property="name" column="name"/>
        <result property="followedCount" column="followed_count"/>
        <result property="followingCount" column="following_count"/>
        <result property="createdDateTime" column="created_timestamp"/>
        <result property="modifiedDateTime" column="modified_timestamp"/>
        <result property="fcmToken" column="fcm_token"/>
    </resultMap>

    <insert id="insert" useGeneratedKeys="true" keyProperty="request.id">
        INSERT INTO member(email, hashed, name)
        VALUES (#{request.email}, #{request.hashed}, #{request.name})
    </insert>

    <select id="findByEmail" resultMap="memberInfoResultMap">
        SELECT id, email, hashed, name, followed_count, following_count, created_timestamp
        FROM member
        WHERE email = #{email}
    </select>

    <select id="findById" resultMap="memberInfoResultMap">
        SELECT id, email, hashed, name, followed_count, following_count, created_timestamp
        FROM member
        WHERE id = #{memberId}
    </select>

    <delete id="deleteById">
        DELETE
        FROM member
        WHERE id = #{memberId}
    </delete>

    <insert id="setFcmToken">
        INSERT INTO fcm_token(member_id, fcm_token)
        VALUES (#{memberId}, #{fcmToken})
    </insert>

    <select id="findFcmTokenById">
        SELECT fcm_token
        FROM fcm_token
        WHERE member_id = #{memberId}
    </select>

    <update id="updatePassword">
        UPDATE member
        SET hashed = #{request.newHashed}
        WHERE id = #{request.memberId}
    </update>

    <update id="incrementFollowedCount">
        UPDATE member
        SET followed_count = followed_count + #{count}
        WHERE id = #{followedId}
    </update>

    <update id="incrementFollowingCount">
        UPDATE member
        SET following_count = following_count + #{count}
        WHERE id = #{followerId}
    </update>

    <update id="decrementFollowedCount">
        UPDATE member
        SET followed_count = followed_count - #{count}
        WHERE id = #{followedId}
    </update>

    <update id="decrementFollowingCount">
        UPDATE member
        SET following_count = following_count - #{count}
        WHERE id = #{followerId}
    </update>

    <update id="decrementFollowingCountOfFollowers">
        UPDATE member
        SET following_count = following_count - #{count}
        WHERE id IN (SELECT follower_id
                     FROM follow
                     WHERE followed_id = #{memberId})
    </update>
</mapper>
